{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/www/own_projects/fest/src/components/edition.js\";\nimport React from \"react\";\nimport { Router, Switch, Route // Link,\n, Redirect, useHistory, useLocation } from \"react-router\"; // This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default function Edition() {\n  return /*#__PURE__*/React.createElement(Router, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AuthButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Public Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/protected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Protected Page\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/public\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PublicPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LoginPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/protected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })))));\n}\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n\n};\n\nfunction AuthButton() {\n  let history = useHistory();\n  return fakeAuth.isAuthenticated ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Welcome!\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      fakeAuth.signout(() => history.push(\"/\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Sign out\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"You are not logged in.\");\n} // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => fakeAuth.isAuthenticated ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction PublicPage() {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }\n  }, \"Public\");\n}\n\nfunction ProtectedPage() {\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }\n  }, \"Protected\");\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  let login = () => {\n    fakeAuth.authenticate(() => {\n      history.replace(from);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"You must log in to view the page at \", from.pathname), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Log in\"));\n}","map":{"version":3,"sources":["/Users/andrei/www/own_projects/fest/src/components/edition.js"],"names":["React","Router","Switch","Route","Redirect","useHistory","useLocation","Edition","history","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","AuthButton","push","PrivateRoute","children","rest","location","pathname","state","from","PublicPage","ProtectedPage","LoginPage","login","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Router,\n    Switch,\n    Route,\n    // Link,\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router\";\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nexport default function Edition() {\n    return (\n        <Router history={history}>\n            <div>\n                <AuthButton />\n\n                <ul>\n                    <li>\n                        <Link to=\"/public\">Public Page</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/protected\">Protected Page</Link>\n                    </li>\n                </ul>\n\n                <Switch>\n                    <Route path=\"/public\">\n                        <PublicPage />\n                    </Route>\n                    <Route path=\"/login\">\n                        <LoginPage />\n                    </Route>\n                    <PrivateRoute path=\"/protected\">\n                        <ProtectedPage />\n                    </PrivateRoute>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nconst fakeAuth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        fakeAuth.isAuthenticated = true;\n        setTimeout(cb, 100); // fake async\n    },\n    signout(cb) {\n        fakeAuth.isAuthenticated = false;\n        setTimeout(cb, 100);\n    }\n};\n\nfunction AuthButton() {\n    let history = useHistory();\n\n    return fakeAuth.isAuthenticated ? (\n        <p>\n            Welcome!{\" \"}\n            <button\n                onClick={() => {\n                    fakeAuth.signout(() => history.push(\"/\"));\n                }}\n            >\n                Sign out\n            </button>\n        </p>\n    ) : (\n        <p>You are not logged in.</p>\n    );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                fakeAuth.isAuthenticated ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction PublicPage() {\n    return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {\n    return <h3>Protected</h3>;\n}\n\nfunction LoginPage() {\n    let history = useHistory();\n    let location = useLocation();\n\n    let { from } = location.state || { from: { pathname: \"/\" } };\n    let login = () => {\n        fakeAuth.authenticate(() => {\n            history.replace(from);\n        });\n    };\n\n    return (\n        <div>\n            <p>You must log in to view the page at {from.pathname}</p>\n            <button onClick={login}>Log in</button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}