{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/www/own_projects/fest/src/components/menu.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SingIn from './singIn';\nexport default function MenuMain() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const menuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Intro\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SingIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Take part\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Open Menu\"), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: menuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: menuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: menuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"My account\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: menuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Logout\"))));\n}","map":{"version":3,"sources":["/Users/andrei/www/own_projects/fest/src/components/menu.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Menu","MenuItem","SingIn","MenuMain","open","setOpen","useState","handleClickOpen","handleClose","anchorEl","setAnchorEl","handleClick","event","currentTarget","menuClose","Boolean"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SingIn from './singIn';\n\nexport default function MenuMain() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const menuClose = () => {\n        setAnchorEl(null);\n    };\n    return (\n        <div>\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Intro\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n            >\n                <DialogContent>\n                    <SingIn/>\n                </DialogContent>\n            </Dialog>\n\n        </div>\n        <div>\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            Take part\n        </Button>\n    {/*<Dialog*/}\n    {/*    open={open}*/}\n    {/*    onClose={handleClose}*/}\n    {/*  */}\n    {/*    aria-describedby=\"alert-dialog-description\"*/}\n    {/*>*/}\n    {/*    <DialogTitle >{\"Use Google's location service?\"}</DialogTitle>*/}\n    {/*    <DialogContent>*/}\n    {/*        <DialogContentText id=\"alert-dialog-description\">*/}\n    {/*            Let Google*/}\n    {/*        </DialogContentText>*/}\n    {/*    </DialogContent>*/}\n    {/*    <DialogActions>*/}\n    {/*        <Button onClick={handleClose} color=\"primary\">*/}\n    {/*            Disagree*/}\n    {/*        </Button>*/}\n    {/*        <Button onClick={handleClose} color=\"primary\" autoFocus>*/}\n    {/*            Agree*/}\n    {/*        </Button>*/}\n    {/*    </DialogActions>*/}\n    {/*</Dialog>*/}\n    </div>\n    {/*<div>*/}\n    {/*    <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>*/}\n    {/*        Sing Up*/}\n    {/*    </Button>*/}\n    {/*    <Dialog*/}\n    {/*        open={open}*/}\n    {/*        onClose={handleClose}*/}\n    {/*        aria-labelledby=\"alert-dialog-title\"*/}\n    {/*        aria-describedby=\"alert-dialog-description\"*/}\n    {/*    >*/}\n    {/*        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>*/}\n    {/*        <DialogContent>*/}\n    {/*            <DialogContentText id=\"alert-dialog-description\">*/}\n    {/*                Let Google help apps determine location. This means sending anonymous location data to*/}\n    {/*                Google, even when no apps are running.*/}\n    {/*            </DialogContentText>*/}\n    {/*        </DialogContent>*/}\n    {/*        <DialogActions>*/}\n    {/*            <Button onClick={handleClose} color=\"primary\">*/}\n    {/*                Disagree*/}\n    {/*            </Button>*/}\n    {/*            <Button onClick={handleClose} color=\"primary\" autoFocus>*/}\n    {/*                Agree*/}\n    {/*            </Button>*/}\n    {/*        </DialogActions>*/}\n    {/*    </Dialog>*/}\n    {/*</div>*/}\n    {/*<div>*/}\n    {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>*/}\n    {/*    Contacts*/}\n    {/*    </Button>*/}\n    {/*<Dialog*/}\n    {/*    open={open}*/}\n    {/*    onClose={handleClose}*/}\n    {/*    aria-labelledby=\"alert-dialog-title\"*/}\n    {/*    aria-describedby=\"alert-dialog-description\"*/}\n    {/*>*/}\n    {/*    <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>*/}\n    {/*    <DialogContent>*/}\n    {/*        <DialogContentText id=\"alert-dialog-description\">*/}\n    {/*            Let Google help apps determine location. This means sending anonymous location data to*/}\n    {/*            Google, even when no apps are running.*/}\n    {/*        </DialogContentText>*/}\n    {/*    </DialogContent>*/}\n    {/*    <DialogActions>*/}\n    {/*        <Button onClick={handleClose} color=\"primary\">*/}\n    {/*            Disagree*/}\n    {/*        </Button>*/}\n    {/*        <Button onClick={handleClose} color=\"primary\" autoFocus>*/}\n    {/*            Agree*/}\n    {/*        </Button>*/}\n    {/*    </DialogActions>*/}\n    {/*</Dialog>*/}\n    {/*</div>*/}\n            <div>\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                    Open Menu\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={menuClose}\n                >\n                    <MenuItem onClick={menuClose}>Profile</MenuItem>\n                    <MenuItem onClick={menuClose}>My account</MenuItem>\n                    <MenuItem onClick={menuClose}>Logout</MenuItem>\n                </Menu>\n            </div>\n        </div>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}