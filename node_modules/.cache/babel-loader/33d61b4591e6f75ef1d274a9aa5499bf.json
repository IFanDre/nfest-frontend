{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/www/own_projects/fest/src/components/header.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Link, Route, NavLink, Nav } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles'; // import Button from '@material-ui/core/Button';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PropTypes from 'prop-types';\nimport { AppBar, Typography, Toolbar, Tabs, Tab, Box, IconButton, Grid } from '@material-ui/core';\nimport Intro from \"./intro\";\nimport Contact from \"./contacts\";\nimport About from \"./about\";\nimport Auth from \"./auth\";\nimport { FacebookIcon, InstagramIcon, YouTubeIcon } from \"@material-ui/icons/Facebook\";\nimport PasswordReset from \"./passwordReset\";\nimport EditionMenu from \"./leftMenu\";\nimport Edition from \"./edition\";\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport SignIn from \"./singIn\";\nimport Paper from \"@material-ui/core/Paper\"; // This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  button: {}\n});\nexport default function MenuBar() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EditionMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exactly: true,\n    component: Intro,\n    pattern: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exactly: true,\n    component: About,\n    pattern: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exactly: true,\n    component: Contact,\n    pattern: \"/contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exactly: true,\n    component: Auth,\n    pattern: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })))));\n} // const  = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//         fakeAuth.isAuthenticated = true;\n//         setTimeout(cb, 100); // fake async\n//     },\n//     signout(cb) {\n//         fakeAuth.isAuthenticated = false;\n//         setTimeout(cb, 100);\n//     }\n// };\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => \"isAuthenticated\" ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/auth\",\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/andrei/www/own_projects/fest/src/components/header.js"],"names":["React","Component","BrowserRouter","Router","Switch","Link","Route","NavLink","Nav","makeStyles","MenuIcon","PropTypes","AppBar","Typography","Toolbar","Tabs","Tab","Box","IconButton","Grid","Intro","Contact","About","Auth","FacebookIcon","InstagramIcon","YouTubeIcon","PasswordReset","EditionMenu","Edition","Redirect","useHistory","useLocation","SignIn","Paper","useStyles","root","flexGrow","button","MenuBar","classes","value","setValue","useState","handleChange","event","newValue","PrivateRoute","children","rest","location","pathname","state","from"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Link, Route, NavLink, Nav} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n// import Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PropTypes from 'prop-types';\nimport { AppBar, Typography, Toolbar, Tabs, Tab, Box, IconButton, Grid } from '@material-ui/core';\nimport Intro from \"./intro\";\nimport Contact from \"./contacts\";\nimport About from \"./about\";\nimport Auth from \"./auth\";\nimport {FacebookIcon, InstagramIcon, YouTubeIcon} from \"@material-ui/icons/Facebook\";\nimport PasswordReset from \"./passwordReset\";\nimport EditionMenu from \"./leftMenu\";\nimport Edition from \"./edition\";\nimport {\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport SignIn from \"./singIn\";\nimport Paper from \"@material-ui/core/Paper\";\n\n// This example has 3 pages: a public page, a protected\n// page, and a login screen. In order to see the protected\n// page, you must first login. Pretty standard stuff.\n//\n// First, visit the public page. Then, visit the protected\n// page. You're not yet logged in, so you are redirected\n// to the login page. After you login, you are redirected\n// back to the protected page.\n//\n// Notice the URL change each time. If you click the back\n// button at this point, would you expect to go back to the\n// login page? No! You're already logged in. Try it out,\n// and you'll see you go back to the page you visited\n// just *before* logging in, the public page.\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    button: {\n\n    }\n});\nexport default function MenuBar() {\n\n\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div>\n        {/*<Router>*/}\n        {/*        <Paper className={classes.root}>*/}\n        {/*            <Nav*/}\n        {/*                value={value}*/}\n        {/*                onChange={handleChange}*/}\n        {/*                indicatorColor=\"primary\"*/}\n        {/*                textColor=\"primary\"*/}\n        {/*                centered*/}\n        {/*            >*/}\n        {/*                <EditionMenu />*/}\n        {/*                <Tab label={<NavLink to=\"/\">Intro</NavLink>} />*/}\n        {/*                <Tab label={<NavLink to=\"/about\">About</NavLink>} />*/}\n        {/*                <Tab label={<NavLink to=\"/contact\">Contacts</NavLink>} />*/}\n        {/*                <Tab label={<NavLink to=\"/auth\">Login</NavLink>} />*/}\n        {/*                <Tab label={<NavLink to=\"/edition\">Edition</NavLink>} />*/}\n        {/*            </Nav>*/}\n        {/*        </Paper>*/}\n\n        {/*        <Switch>*/}\n        {/*            <Route exact path=\"/\">*/}\n        {/*                <Intro />*/}\n        {/*            </Route>*/}\n        {/*            <Route path=\"/about\">*/}\n        {/*                <About />*/}\n        {/*            </Route>*/}\n        {/*            <Route path=\"/contact\">*/}\n        {/*                <Contact />*/}\n        {/*            </Route>*/}\n        {/*            <Route path=\"/auth\">*/}\n        {/*                <Auth />*/}\n        {/*            </Route>*/}\n        {/*            <PrivateRoute path=\"/edition\">*/}\n        {/*                <Edition />*/}\n        {/*            </PrivateRoute>*/}\n        {/*        </Switch>*/}\n        {/*</Router>*/}\n            <Router>\n                <div>\n                    <EditionMenu />\n                    <Switch>\n                        <Route exactly component={Intro} pattern=\"/\" />\n                        <Route exactly component={About} pattern=\"/about\" />\n                        <Route exactly component={Contact} pattern=\"/contact\" />\n                        <Route exactly component={Auth} pattern=\"/auth\" />\n                        {/*<Route component={Edition} />*/}\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\n// const  = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//         fakeAuth.isAuthenticated = true;\n//         setTimeout(cb, 100); // fake async\n//     },\n//     signout(cb) {\n//         fakeAuth.isAuthenticated = false;\n//         setTimeout(cb, 100);\n//     }\n// };\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                \"isAuthenticated\" ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/auth\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}